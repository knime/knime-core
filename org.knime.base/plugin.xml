<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension-point id="pmmlports" name="pmml.ports" schema="schema/pmmlports.exsd"/>
   <extension-point id="AggregationOperator" name="AggregationOperator" schema="schema/org.knime.base.AggregationOperator.exsd"/>
   <extension-point id="MissingCellHandler" name="MissingCellHandler" schema="schema/MissingCellHandler.exsd"/>
    <extension
         point="org.knime.workbench.repository.categories">
      <category
            icon="icons/16x16/category_reader.png"
            level-id="io"
            name="IO"
            path="/"/>
      <category
            icon="icons/16x16/read.png"
            level-id="read"
            name="Read"
            path="/io"/>
      <category
            after="read"
            icon="icons/16x16/write.png"
            level-id="write"
            name="Write"
            path="/io"/>
      <category
            after="io"
            icon="icons/16x16/manipulation.png"
            level-id="manipulation"
            name="Manipulation"
            path="/"/>
      <category
            icon="icons/16x16/column.png"
            level-id="column"
            name="Column"
            path="/manipulation"/>
      <category
            after="column"
            icon="icons/16x16/row.png"
            level-id="row"
            name="Row"
            path="/manipulation"/>
      <category
            after="row"
            icon="icons/16x16/matrix.png"
            level-id="table"
            name="Table"
            path="/manipulation"/>
      <category
            icon="icons/missing.gif"
            level-id="row-other"
            after="row-transform"
            name="Other"
            path="/manipulation/row"/>
      <category
            after="analytics"
            icon="icons/16x16/category_database.png"
            level-id="database"
            name="Database"
            path="/"/>
      <category
            icon="icons/missing.gif"
            level-id="column-split+combine"
            name="Split &amp; Combine"
            path="/manipulation/column">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="column-filter"
            name="Filter"
            path="/manipulation/column">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="column-transform"
            name="Transform"
            path="/manipulation/column">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="binning"
            name="Binning"
            path="/manipulation/column">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="column-convert+replace"
            name="Convert &amp; Replace"
            path="/manipulation/column">
      </category>
      
      <category
            icon="icons/missing.gif"
            level-id="row-filter"
            name="Filter"
            path="/manipulation/row">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="row-transform"
            name="Transform"
            path="/manipulation/row">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="pmml"
            name="PMML"
            path="/manipulation">
      </category>
      <category
            after="manipulation"
            icon="icons/16x16/category_visualize.png"
            level-id="view"
            name="Views"
            path="/"/>
      <category
            level-id="property"
            icon="icons/16x16/category_properties.png"
            description="View Properties"
            path="/view"
            name="Property"/>
      <category
            icon="icons/16x16/category_javascript.png"
            level-id="js-views"
            locked="true"
            name="JavaScript"
            path="/view" />
      <category
            after="view"
            icon="icons/16x16/category_mining.png"
            level-id="analytics"
            name="Analytics"
            path="/"/>
      <category
            icon="icons/16x16/category_mining.png"
            level-id="mining"
            name="Mining"
            path="/analytics"/>
      <category
            icon="icons/missing.gif"
            level-id="basisfunction"
            name="Fuzzy Rules"
            path="/analytics/mining/rules"/>
      <category
            icon="icons/missing.gif"
            level-id="clustering"
            name="Clustering"
            path="/analytics/mining"/>
      <category
            level-id="nn"
            icon="icons/missing.gif"
            description="Learning of Neural Networks"
            path="/analytics/mining"
            after="rules"
            name="Neural Network"/>
      <category
            after="mining"
            icon="icons/16x16/category_statistics.png"
            level-id="statistics"
            name="Statistics"
            path="/analytics"/>
       <category
            icon="icons/missing.gif"
            level-id="regression"
            name="Linear/Polynomial Regression"
            path="/analytics/mining"/>
      <category
            after="clustering"
            icon="icons/missing.gif"
            level-id="rules"
            name="Rule Induction"
            path="/analytics/mining"/>
      <category
            icon="icons/missing.gif"
            level-id="mlp"
            name="MLP"
            path="/analytics/mining/nn"/>
      <category
            after="mlp"
            icon="icons/missing.gif"
            level-id="pnn"
            name="PNN"
            path="/analytics/mining/nn"/>
      <category
            after="nn"
            icon="icons/missing.gif"
            level-id="dtree"
            name="Decision Tree"
            path="/analytics/mining"/>
      <category
            after="featureselection"
            icon="icons/missing.gif"
            level-id="modeleval"
            name="Scoring"
            path="/analytics/mining"/>
      <category
            after="write"
            icon="icons/missing.gif"
            level-id="io-other"
            name="Other"
            path="/io"/>
      <category
            icon="icons/missing.gif"
            level-id="subgroup"
            name="Item Sets / Association Rules"
            path="/analytics/mining"/>
      <category
            after="dtree"
            description="miscellaneous classifiers"
            icon="icons/missing.gif"
            level-id="miscClass"
            name="Misc Classifiers"
            path="/analytics/mining"/>
      <category
            icon="icons/missing.gif"
            level-id="bayes"
            name="Bayes"
            path="/analytics/mining"/>
      <category
            icon="icons/missing.gif"
            level-id="mds"
            name="MDS"
            path="/analytics/mining"/>
      <category
            icon="icons/missing.gif"
            level-id="svm"
            name="SVM"
            path="/analytics/mining">
      </category>
      <category
            after="svm"
            icon="icons/missing.gif"
            level-id="featureselection"
            name="Feature Selection"
            path="/analytics/mining">
      </category>
      <category
            icon="icons/16x16/meta.png"
            level-id="meta"
            name="Meta Nodes"
            path="/analytics/mining/featureselection">
      </category>
      <category
            description="Nodes necessary for cross validation"
            icon="icons/16x16/category_cross_validation.png"
            level-id="crossvalidation"
            name="Cross Validation"
            path="/analytics/mining/modeleval">
      </category>
      <category
            description="Meta Nodes for Model Evaluation"
            icon="icons/16x16/meta.png"
            level-id="meta"
            name="Meta Nodes"
            path="/analytics/mining/modeleval">
      </category>
      <category
            after="scripting"
            description="external tools and tool integrations"
            icon="icons/16x16/category_misc.png"
            level-id="toolintegration"
            name="Tools &amp; Services"
            path="/"/>
      <category
            after="toolintegration"
            description="miscellaneous nodes"
            icon="icons/16x16/category_misc.png"
            level-id="misc"
            name="Misc"
            path="/"/>
      <category
            description="Java Snippet nodes"
            icon="icons/16x16/category_javasnippet.png"
            level-id="java-snippet"
            name="Java"
            path="/scripting"/>
      <category
            icon="icons/missing.gif"
            level-id="pca"
            name="PCA"
            path="/analytics/mining">
      </category>
      <category
            icon="icons/16x16/weka.png"
            level-id="weka"
            name="Weka"
            path="/analytics/mining"/>
      <category
            icon="icons/missing.gif"
            level-id="mining-pmml"
            locked="true"
            name="PMML"
            path="/analytics/mining">
      </category>
      <category
            description="Utility nodes supporting visualizations in KNIME"
            icon="icons/16x16/category_view-util.png"
            level-id="view-util"
            name="Utility"
            path="/view">
      </category>
      <category
            after="toolintegration"
            description="Nodes from KNIME Labs"
            icon="icons/16x16/category_knime_labs.png"
            level-id="labs"
            name="KNIME Labs"
            path="/">
      </category>
      <category
            description="JavaScript Views in KNIME Labs"
            icon="icons/16x16/category_javascript.png"
            level-id="js-views"
            name="JavaScript Views (Labs)"
            path="/labs">
      </category>
      <category
            description="PMML Processing Nodes (Labs)"
            icon="icons/missing.gif"
            level-id="labspmml"
            name="PMML"
            path="/labs">
      </category>
      <category
            after="toolintegration"
            description="Nodes provided by the KNIME community"
            icon="icons/16x16/category_community_nodes.png"
            level-id="community"
            locked="false"
            name="Community Nodes"
            path="/">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="database-io"
            locked="true"
            name="Read/Write"
            path="/database">
      </category>
      <category
            after="database-io"
            icon="icons/missing.gif"
            level-id="database-manipulation"
            locked="true"
            name="Manipulation"
            path="/database">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="database-connector"
            locked="true"
            name="Connector"
            path="/database"
            after="database-io">
      </category>
      <category
            icon="icons/missing.gif"
            level-id="database-utility"
            locked="true"
            name="Utility"
            path="/database">
      </category>            
      <category
            icon="icons/16x16/category_socialmedia.png"
            level-id="social-media"
            locked="true"
            name="Social Media"
            after="database"
            path="/">
      </category>            
      <category
            after="social-media"
            icon="icons/16x16/report.png"
            level-id="report"
            name="Reporting"
            path="/">
      </category>
      <category
            after="report"
            icon="icons/16x16/category_chemistry.png"
            level-id="chemistry"
            name="Chemistry"
            path="/"/>
      <category
            icon="icons/16x16/category_applications.png"
            level-id="applications"
            locked="true"
            name="Other Data Types"
            after="database"
            path="/">
      </category>            
      <category
            icon="icons/16x16/category_structured_data.png"
            level-id="struct-data"
            locked="true"
            name="Structured Data"
            after="applications"
            path="/">
      </category>            
      <category
            icon="icons/16x16/category_scripting.png"
            level-id="scripting"
            locked="true"
            name="Scripting"
            after="database"
            path="/">
      </category>            
      <category
            after="scripting"
            description="nodes for loops, switches and other flow control operations"
            icon="icons/16x16/flow_control.png"
            level-id="flowcontrol"
            name="Workflow Control"
            path="/">
      </category>
      <category
            icon="icons/16x16/category_automatization.png"
            level-id="automation"
            name="Automation"
            path="/flowcontrol">
      </category>
      <category
            icon="icons/16x16/category_quickform.png"
            level-id="quickforms"
            name="Quickforms"
            path="/flowcontrol">
      </category>
      <category
            icon="icons/16x16/variables.png"
            level-id="variables"
            name="Variables"
            path="/flowcontrol"
            after="quickforms">
      </category>
      <category
            after="variables"
            description="nodes for manual assembly of loops"
            icon="icons/16x16/category_loop_support.png"
            level-id="loopsupport"
            name="Loop Support"
            path="/flowcontrol/">
      </category>
      <category
            after="loopsupport"
            description="Nodes for If/Case switch handling"
            icon="icons/16x16/switches.png"
            level-id="switches"
            name="Switches"
            path="/flowcontrol">
      </category>
      <category
            after="switches"
            icon="icons/16x16/trycatch.png"
            level-id="trycatch"
            name="Error Handling"
            path="/flowcontrol">
      </category>
      <category
            after="trycatch"
            description="General purpose meta nodes"
            icon="icons/16x16/meta.png"
            level-id="meta"
            name="Meta Nodes"
            path="/flowcontrol">
      </category>
      <category
            after="_last_"
            description="Uncategorized nodes"
            icon="icons/16x16/category_uncategorized.png"
            level-id="uncategorized"
            locked="false"
            name="Uncategorized"
            path="/">
      </category>
      <category
            description="Nodes for Deep Learning"
            icon="icons/16x16/category_dl.png"
            level-id="deeplearning"
            name="Deep Learning"
            path="/labs">
      </category>
   </extension>
            
     <extension
         point="org.knime.workbench.repository.nodes">
      <node
            factory-class="org.knime.base.node.mine.smote.SmoteNodeFactory"
            category-path="/manipulation/column/column-transform"/>
      <node
            category-path="/io/read"
            factory-class="org.knime.base.node.io.filereader.FileReaderNodeFactory">
      </node>
      <node
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.color.ColorManager2NodeFactory">
      </node>
      <node
            after="org.knime.base.node.viz.property.color.ColorManager2NodeFactory"
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.size.SizeManager2NodeFactory"/>
      <node
	        after="org.knime.base.node.viz.property.size.SizeManager2NodeFactory"
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.shape.ShapeManagerNodeFactory">
      </node>
      <node
            after="org.knime.base.node.viz.property.shape.ShapeManagerNodeFactory"
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.color.ColorAppender2NodeFactory">
      </node>
      <node
            after="org.knime.base.node.viz.property.color.ColorAppender2NodeFactory"
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.size.SizeAppenderNodeFactory">
      </node>
      <node
            after="org.knime.base.node.viz.property.size.SizeAppenderNodeFactory"
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.shape.ShapeAppenderNodeFactory">
      </node>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.table.TableNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/binning"
            factory-class="org.knime.base.node.preproc.binner.BinnerNodeFactory"/>
      <node
            category-path="/manipulation/column/binning"
            factory-class="org.knime.base.node.preproc.binnerdictionary.BinByDictionaryNodeFactory"
            after="org.knime.base.node.preproc.binner.BinnerNodeFactory">
      </node>
      <node
            category-path="/io"
            factory-class="org.knime.base.node.util.cache.CacheNodeFactory"/>
      <node
            category-path="/analytics/mining/clustering"
            deprecated="true"
            factory-class="org.knime.base.node.mine.cluster.kmeans.ClusterNodeFactory"/>
      <node
            category-path="/analytics/mining/rules/basisfunction"
            factory-class="org.knime.base.node.mine.bfn.fuzzy.FuzzyBasisFunctionLearnerNodeFactory"/>
      <node
            category-path="/analytics/mining/rules/basisfunction"
            factory-class="org.knime.base.node.mine.bfn.fuzzy.FuzzyBasisFunctionPredictor2NodeFactory"/>
      <node deprecated="true"
            category-path="/analytics/mining/rules/basisfunction"
            factory-class="org.knime.base.node.mine.bfn.fuzzy.FuzzyBasisFunctionPredictorNodeFactory"/>
      <node
            category-path="/analytics/mining/nn/pnn"
            factory-class="org.knime.base.node.mine.bfn.radial.RadialBasisFunctionLearnerNodeFactory"/>
      <node
            category-path="/analytics/mining/nn/pnn"
            factory-class="org.knime.base.node.mine.bfn.radial.RadialBasisFunctionPredictor2NodeFactory"/>
      <node deprecated="true"
            category-path="/analytics/mining/nn/pnn"
            factory-class="org.knime.base.node.mine.bfn.radial.RadialBasisFunctionPredictorNodeFactory"/>
      <node
            category-path="/io/write"
            factory-class="org.knime.base.node.io.csvwriter.CSVWriterNodeFactory"/>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.joiner.Joiner2NodeFactory"/>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
            after="org.knime.base.node.preproc.joiner.Joiner2NodeFactory" />
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.split2.SplitNodeFactory2"/>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
            after="org.knime.base.node.preproc.split2.SplitNodeFactory2"/>
      <node
            after="org.knime.base.node.io.csvwriter.CSVWriterNodeFactory"
            factory-class="org.knime.base.node.io.arffwriter.ARFFWriterNodeFactory"
            category-path="/io/write"/>
      <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.sorter.SorterNodeFactory"/>
      <node
            after="org.knime.base.node.io.filereader.FileReaderNodeFactory"
            factory-class="org.knime.base.node.io.arffreader.ARFFReaderNodeFactory"
            category-path="/io/read"/>
      <node
            after="org.knime.base.node.io.arffreader.ARFFReaderNodeFactory"
            category-path="/io/read"
            factory-class="org.knime.base.node.io.csvreader.CSVReaderNodeFactory"/>
      <node
            after="org.knime.base.node.io.csvreader.CSVReaderNodeFactory"
            category-path="/io/read"
            factory-class="org.knime.base.node.io.linereader.LineReaderNodeFactory">
      </node>
      <node
            category-path="/analytics/statistics"
            factory-class="org.knime.base.node.viz.crosstable.CrosstabNodeFactory"
            after="org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"/>
      <node
            category-path="/analytics/statistics"
            factory-class="org.knime.base.node.preproc.valcount.ValueCounterNodeFactory"
            after="org.knime.base.node.viz.crosstable.CrosstabNodeFactory"/>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"/>
     <node
           category-path="/manipulation/pmml"
           deprecated="true"
           factory-class="org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory"/>
      <node
            category-path="/manipulation/pmml"
            factory-class="org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLApplyNodeFactory"/>
      <node
            category-path="/manipulation/pmml"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.pmml.numbertostring.NumberToStringNodeFactory"/>
      <node
            category-path="/manipulation/pmml"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.pmml.stringtonumber.StringToNumberNodeFactory"/>
      <node
            category-path="/manipulation/pmml"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.pmml.binner.BinnerNodeFactory"/>
      <node
            category-path="/manipulation/pmml"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.pmml.columntrans2.One2ManyCol2PMMLNodeFactory"/>
    <node
            category-path="/manipulation/pmml"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.pmml.columntrans2.Many2OneCol2PMMLNodeFactory"/>
    <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.columnfilter.DataColumnSpecFilterPMMLNodeFactory"/>
     <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"/>
     <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"/>
      <node
            category-path="/manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"/>
      <node
            after="org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
            category-path="/manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"/>
      <node
            factory-class="org.knime.base.node.preproc.shuffle.ShuffleNodeFactory"
            category-path="/manipulation/row/row-transform"/>
      <node
            factory-class="org.knime.base.node.preproc.sample.SamplingNodeFactory"
            category-path="/manipulation/row/row-transform"/>
      <node
            after="org.knime.base.node.preproc.sample.SamplingNodeFactory"
            factory-class="org.knime.base.node.preproc.bootstrap.BootstrapNodeFactory"
            category-path="/manipulation/row/row-transform"/>
      <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.equalsizesampling.EqualSizeSamplingNodeFactory"
            after="org.knime.base.node.preproc.sample.SamplingNodeFactory"/>
      <node
            factory-class="org.knime.base.node.preproc.partition.PartitionNodeFactory"
            category-path="/manipulation/row/row-transform"/>
      <node
            category-path="/analytics/mining/clustering"
            deprecated="true"
            factory-class="org.knime.base.node.mine.cluster.fuzzycmeans.FuzzyClusterNodeFactory"/>
      <node
            category-path="/analytics/mining/clustering"
            factory-class="org.knime.base.node.mine.cluster.fuzzycmeans.FuzzyClusterNodeFactory2"/>
      <node deprecated="true"
            factory-class="org.knime.base.node.preproc.missingval.MissingValueHandling3NodeFactory"
            category-path="/manipulation/column/column-transform"/>
      <node
            category-path="/analytics/mining/nn/mlp"
            deprecated="true"
            factory-class="org.knime.base.node.mine.neural.rprop.RPropNodeFactory"/>
      <node
            category-path="/analytics/mining/nn/mlp"
            factory-class="org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"/>
      <node deprecated="true"
            category-path="/analytics/mining/nn/mlp"
            factory-class="org.knime.base.node.mine.neural.mlp.MLPPredictorNodeFactory"/>
      <node
            after="org.knime.base.node.io.pmml.read.PMMLReaderNodeFactory2"
            category-path="/io/read"
            factory-class="org.knime.base.node.io.predictor.PredictorReaderNodeFactory"/>
      <node
            category-path="/manipulation/table"
            factory-class="org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"/>
      <node
            category-path="/manipulation/table"
            factory-class="org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"/>
      <node
            category-path="/manipulation/table"
            factory-class="org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"/>
      <node
            category-path="/analytics/mining/dtree"
            factory-class="org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"/>
      <node deprecated="true"
            category-path="/analytics/mining/dtree"
            factory-class="org.knime.base.node.mine.decisiontree2.predictor.DecTreePredictorNodeFactory"/>
      <node
            category-path="/analytics/mining/dtree"
            factory-class="org.knime.base.node.mine.decisiontree2.image.DecTreeToImageNodeFactory"/>
      <node
            category-path="/analytics/mining/clustering"
            factory-class="org.knime.base.node.mine.sota.SotaLearnerNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.rename.RenameNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.columnrenameregex.ColumnRenameRegexNodeFactory"
            after="org.knime.base.node.preproc.rename.RenameNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"/>
      <node
            category-path="/analytics/mining/subgroup"
            factory-class="org.knime.base.node.preproc.bitvector.create.CreateBitVectorNodeFactory"/>
      <node
            category-path="/analytics/mining/subgroup"
            factory-class="org.knime.base.node.mine.subgroupminer.SubgroupMinerFactory2"/>
       <node
             category-path="/analytics/mining/regression"
             deprecated="true"
             factory-class="org.knime.base.node.mine.regression.linear2.learner.LinReg2LearnerNodeFactory"/>
       <node
             after="org.knime.base.node.mine.regression.linear2.learner.LinReg2LearnerNodeFactory"
             category-path="/analytics/mining/regression"
             deprecated="true"
             factory-class="org.knime.base.node.mine.regression.polynomial.learner2.PolyRegLearnerNodeFactory"/>
       <node
             after="org.knime.base.node.mine.regression.polynomial.learner2.PolyRegLearnerNodeFactory"
             category-path="/analytics/mining/regression"
             deprecated="true"
             factory-class="org.knime.base.node.mine.regression.logistic.learner.LogRegLearnerNodeFactory"/>
       <node
             after="org.knime.base.node.mine.regression.polynomial.learner2.PolyRegLearnerNodeFactory2"
             category-path="/analytics/mining/regression"
             deprecated="true"
             factory-class="org.knime.base.node.mine.regression.predict2.RegressionPredictorNodeFactory"/> 
	    <node
	          after="org.knime.base.node.io.arffreader.ARFFReaderNodeFactory"
	          category-path="/io/read"
	          factory-class="org.knime.base.node.io.table.read.ReadTableNodeFactory"/>
	    <node
	          after="org.knime.base.node.io.arffwriter.ARFFWriterNodeFactory"
	          category-path="/io/write"
	          factory-class="org.knime.base.node.io.table.write.WriteTableNodeFactory"/>
     <node
           category-path="/manipulation/column/column-split+combine"
           factory-class="org.knime.base.node.preproc.bitvector.create.CreateBitVectorNodeFactory"/>
     <node
           category-path="/manipulation/column/column-split+combine"
           factory-class="org.knime.base.node.preproc.bitvector.expand.ExpandBitVectorNodeFactory"
           after="org.knime.base.node.preproc.bitvector.create.CreateBitVectorNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.histogram.node.HistogramNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.histogram.node.FixedColumnHistogramNodeFactory"/>
     <node
           category-path="/manipulation/column/column-transform"
           factory-class="org.knime.base.node.preproc.normalize.NormalizerApplyNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.plotter.box.BoxPlotNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.plotter.line.LinePlotterNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.plotter.parcoord.ParallelCoordinateNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.plotter.scatter.ScatterPlotterNodeFactory"/>
     <node
           category-path="/view"
           factory-class="org.knime.base.node.viz.plotter.scattermatrix.ScatterMatrixNodeFactory"/>
     <node
           category-path="/manipulation/row/row-filter"
           factory-class="org.knime.base.node.preproc.filter.hilite.HiliteFilterNodeFactory"/>
    <node
         after="org.knime.base.node.preproc.binner.BinnerNodeFactory"
		 category-path="/manipulation/column/binning"
         factory-class="org.knime.base.node.preproc.discretization.caim2.modelcreator.CAIMDiscretization2NodeFactory"/>
    <node
         after="org.knime.base.node.preproc.discretization.caim2.modelcreator.CAIMDiscretization2NodeFactory"
   		 category-path="/manipulation/column/binning"
         factory-class="org.knime.base.node.preproc.discretization.caim2.modelapply.Discretization2ApplyNodeFactory"/>
    <node
         factory-class="org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
         category-path="/manipulation/row/row-other"/>
      <node
            category-path="/analytics/mining/miscClass"
            factory-class="org.knime.base.node.mine.knn.KnnNodeFactory"/>  
   <node
         category-path="/analytics/mining/clustering"
         factory-class="org.knime.base.node.mine.cluster.hierarchical.HierarchicalClusterNodeFactory"/>
   <node
         category-path="/analytics/mining/clustering"
         factory-class="org.knime.base.node.mine.sota.predictor.SotaPredictorNodeFactory"/>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.pie.node.fixed.FixedPieNodeFactory">
      </node>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.pie.node.interactive.InteractivePieNodeFactory">
      </node>
      <node
            category-path="/analytics/mining/dtree"
            deprecated="true"
            factory-class="org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory2">
      </node>
      <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.groupby.GroupByNodeFactory"/>
      <node
            after="org.knime.base.node.preproc.groupby.GroupByNodeFactory"
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.ungroup.UngroupNodeFactory"/>
      <node
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.pivot.Pivot2NodeFactory"/>
      <node
            category-path="/analytics/mining/bayes"
            factory-class="org.knime.base.node.mine.bayes.naivebayes.predictor3.NaiveBayesPredictorNodeFactory2"/>
      <node deprecated="true"
            category-path="/analytics/mining/bayes"
            factory-class="org.knime.base.node.mine.bayes.naivebayes.predictor.NaiveBayesPredictorNodeFactory"/>
      <node
            category-path="/analytics/mining/bayes"
            deprecated="true"
            factory-class="org.knime.base.node.mine.bayes.naivebayes.learner2.NaiveBayesLearnerNodeFactory2"/>
      <node
            category-path="/analytics/statistics"
            factory-class="org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"/>
      <node
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"/>
      <node
            after="org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.preproc.correlation.filter.CorrelationFilterNodeFactory"/>
      <node
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.preproc.lowvarfilter2.LowVarFilter2NodeFactory"
            after="org.knime.base.node.preproc.correlation.filter.CorrelationFilterNodeFactory"/>
      <node
            category-path="/analytics/mining/mds"
            factory-class="org.knime.base.node.mine.mds.MDSNodeFactory"/>
      <node
            category-path="/analytics/mining/mds"
            deprecated="false"
            factory-class="org.knime.base.node.mine.mds.mdsprojection.MDSProjectionNodeFactory"/>
      <node
            category-path="/analytics/mining/svm"
            deprecated="true"
            factory-class="org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory">
      </node>
      <node
            category-path="/analytics/mining/svm"
            factory-class="org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory">
      </node>
      <node deprecated="true"
            category-path="/analytics/mining/svm"
            factory-class="org.knime.base.node.mine.svm.predictor.SVMPredictorNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.colcompare.ColumnComparatorNodeFactory"/>
      <node
            category-path="/manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.rowsplit.NumericRowSplitterNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.stringreplacer.StringReplacerNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            after="org.knime.base.node.preproc.stringreplacer.StringReplacerNodeFactory"
            factory-class="org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            after="org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
            factory-class="org.knime.base.node.preproc.domain.editnumeric.EditNumericDomainNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            after="org.knime.base.node.preproc.domain.editnumeric.EditNumericDomainNodeFactory"
            factory-class="org.knime.base.node.preproc.domain.editnominal.dic.EditNominalDomainDicNodeFactory">
      </node>
       <node
            category-path="/manipulation/column/column-convert+replace"
            after="org.knime.base.node.preproc.domain.editnominal.dic.EditNominalDomainDicNodeFactory"
            factory-class="org.knime.base.node.preproc.domain.editnominal.EditNominalDomainNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.caseconvert.CaseConvertNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.stringreplacer.dict.SearchReplaceDictNodeFactory"/>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.cellsplit.CellSplitterNodeFactory"/>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"/>
      <node  
            after="org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
            />
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.columntrans2.One2ManyCol2NodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.preproc.columntrans2.One2ManyCol2NodeFactory"
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.columntrans2.Many2OneCol2NodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.colcombine2.ColCombine2NodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.columnmerge.ColumnMergerNodeFactory"
            
            after="org.knime.base.node.preproc.colcombine2.ColCombine2NodeFactory">
      </node>
      <node
            category-path="/analytics/mining/clustering"
            factory-class="org.knime.base.node.mine.cluster.assign.ClusterAssignerNodeFactory"
            >
      </node>
      <node
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.mine.scorer.accuracy.AccuracyScorerNodeFactory"
            >
      </node>
      <node
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.mine.scorer.numeric.NumericScorerNodeFactory"
            
            after="org.knime.base.node.mine.scorer.accuracy.AccuracyScorerNodeFactory"/>
      <node
            after="org.knime.base.node.mine.scorer.numeric.NumericScorerNodeFactory"
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.mine.scorer.entrop.NewEntropyNodeFactory"
            />
      <node
            after="org.knime.base.node.mine.scorer.entrop.NewEntropyNodeFactory"
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.viz.roc.ROCNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.viz.roc.ROCNodeFactory"
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.viz.enrichment.EnrichmentPlotterFactory"
            
            deprecated="true" />
      <node
            after="org.knime.base.node.viz.roc.ROCNodeFactory"
            category-path="/analytics/mining/modeleval"
            factory-class="org.knime.base.node.viz.enrichment2.EnrichmentPlotterFactory"
            />
       <node
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBReaderNodeFactory"
            />
       <node
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBReaderConnectionNodeFactory"
            >
   	  </node>
   	  <node
            after="org.knime.base.node.io.database.DBConnectionWriterNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DatabaseLoopingNodeFactory"
             >
      </node>
   	  <node
            after="org.knime.base.node.io.database.DBConnectionWriterNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.parameterizedquery.ParameterizedDBQueryNodeFactory">
            >
      </node>
      <node
            after="org.knime.base.node.io.database.DBReaderConnectionNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBConnectionNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.DBRowFilterNodeFactory"
            />
      <node
            after="org.knime.base.node.io.database.DBRowFilterNodeFactory"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.DBQueryNodeFactory2"
            />
      <node
            after="org.knime.base.node.io.database.DBQueryNodeFactory2"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.DBColumnFilterNodeFactory"
            />
      <node
            after="org.knime.base.node.io.database.DBColumnFilterNodeFactory"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.DBSorterNodeFactory"
            />
      <node
            after="org.knime.base.node.io.database.DBSorterNodeFactory"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.groupby.DBGroupByNodeFactory2"
            />
      <node
            after="org.knime.base.node.io.database.groupby.DBGroupByNodeFactory2"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.DBJoinerNodeFactory"
            /> 
      <node
            after="org.knime.base.node.io.database.DBJoinerNodeFactory"
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.tablecreator.DBTableCreatorNodeFactory"/>
      <node
            after="org.knime.base.node.io.database.DBReaderConnectionNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBConnectionWriterNodeFactory"
            />
      <node
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBWriterNodeFactory"
            />
      <node
            after="org.knime.base.node.io.database.DBWriterNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBUpdateNodeFactory"
            />
      <node
            after="org.knime.base.node.io.database.DBUpdateNodeFactory"
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.DBDeleteRowsNodeFactory"
            />
      <node
            category-path="/database/database-utility"
            factory-class="org.knime.base.node.io.database.DBSQLExecutorNodeFactory"
            />
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.cellsplitbypos.CellSplitterByPosNodeFactory"
            >
      </node>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.condbox.ConditionalBoxPlotNodeFactory"
            />
      <node
            after="org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
            category-path="/manipulation/column/column-filter"
            factory-class="org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
            >
      </node>
      <node
            factory-class="org.knime.base.node.preproc.filter.constvalcol.ConstantValueColumnFilterNodeFactory"
            category-path="/manipulation/column/column-filter"
            />
      <node
            factory-class="org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
            category-path="/manipulation/column/column-filter"
            />
      <node
            category-path="/manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.filter.rowref.RowFilterRefNodeFactory"
            >
      </node>
       <node
             category-path="/manipulation/column/column-split+combine"
             factory-class="org.knime.base.collection.list.create2.CollectionCreate2NodeFactory"
             >
       </node>
       <node
             after="org.knime.base.collection.list.create2.CollectionCreate2NodeFactory"
             category-path="/manipulation/column/column-split+combine"
             factory-class="org.knime.base.collection.list.split.CollectionSplitNodeFactory"
             >
       </node>
      <node
            after="org.knime.base.node.io.table.read.ReadTableNodeFactory"
            category-path="/io/read"
            deprecated="true"
            factory-class="org.knime.base.node.io.pmml.read.PMMLReaderNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.regexsplit.RegexSplitNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.io.table.write.WriteTableNodeFactory"
            category-path="/io/write"
            factory-class="org.knime.base.node.io.pmml.write.PMMLWriterNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.io.pmml.write.PMMLWriterNodeFactory"
            category-path="/io/write"
            factory-class="org.knime.base.node.io.predictor.PredictorWriterNodeFactory"
            />
      <node
            after="org.knime.base.node.io.predictor.PredictorWriterNodeFactory"
            category-path="/io/write"
            factory-class="org.knime.base.node.image.writeimage.WriteImageNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.image.writeimage.WriteImageNodeFactory"
            category-path="/io/write"
            factory-class="org.knime.base.node.image.imagecolwriter.ImageColumnWriterNodeFactory"
            >
      </node>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.liftchart.LiftChartNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.setoperator.SetOperatorNodeFactory"
            >
      </node>
      <node
            category-path="/analytics/mining/modeleval/crossvalidation"
            factory-class="org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
            >
      </node>
      <node
            after="org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
            category-path="/analytics/mining/modeleval/crossvalidation"
            factory-class="org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.LoopStartCountNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.meta.looper.LoopStartCountNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
            >
      </node>  
      <node
            after="org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.condition.LoopStartGenericNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.meta.looper.condition.LoopStartGenericNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.LoopEndNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.meta.looper.LoopEndNodeFactory"
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.condition.LoopEndConditionNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowvariable.injectvariables.InjectVariablesDBNodeFactory"
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.extractvariables.ExtractVariablesNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowvariable.extractvariables.ExtractVariablesNodeFactory"
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.extractvariables.ExtractVariablesDBNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.createfilename.CreateFilenameNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.preproc.lowvarfilter2.LowVarFilter2NodeFactory"
            category-path="/analytics/mining/featureselection"
            deprecated="true"
            factory-class="org.knime.base.node.meta.feature.backwardelim.BWElimLoopStart1NodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.backwardelim.BWElimLoopStart1NodeFactory"
            category-path="/analytics/mining/featureselection"
            deprecated="true"
            factory-class="org.knime.base.node.meta.feature.backwardelim.BWElimLoopStart2NodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.backwardelim.BWElimLoopStart2NodeFactory"
            category-path="/analytics/mining/featureselection"
            deprecated="true"
            factory-class="org.knime.base.node.meta.feature.backwardelim.BWElimLoopEndNodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.backwardelim.BWElimLoopEndNodeFactory"
            category-path="/analytics/mining/featureselection"
            deprecated="true"
            factory-class="org.knime.base.node.meta.feature.backwardelim.BWElimFilterNodeFactory">
      </node>
       <node
             after="org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
             category-path="/flowcontrol/variables"
             factory-class="org.knime.base.node.flowvariable.appendvariabletotable2.AppendVariableToTable2NodeFactory"
             >
       </node>
       <node
             after="org.knime.base.node.flowvariable.appendvariabletotable2.AppendVariableToTable2NodeFactory"
             category-path="/flowcontrol/variables"
             factory-class="org.knime.base.node.flowvariable.variabletotablerow2.VariableToTable2NodeFactory"
             >
       </node>
       <node
             after="org.knime.base.node.flowvariable.tablecoltovariable.TableColumnToVariableNodeFactory"
             category-path="/flowcontrol/variables"
             factory-class="org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
             >
       </node>
      <node
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.injectvariables.InjectVariablesDBNodeFactory"
            >
      </node>
      <node
            category-path="manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.filter.nominal.NominalValueRowFilterNodeFactory"
            >
      </node>
      <node
            category-path="manipulation/row/row-filter"
            factory-class="org.knime.base.node.preproc.filter.nominal.NominalValueRowSplitterNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.LoopStartIntervalNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.flowcontrol.breakpoint.BreakpointNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.preproc.pivot.Pivot2NodeFactory"
            category-path="/manipulation/row/row-transform"
            factory-class="org.knime.base.node.preproc.unpivot2.Unpivot2NodeFactory"
            >
      </node>

      <node
            category-path="/analytics/mining/pca"
            factory-class="org.knime.base.node.mine.pca.PCANodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.mine.pca.PCANodeFactory"
            category-path="/analytics/mining/pca"
            factory-class="org.knime.base.node.mine.pca.PCAComputeNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.mine.pca.PCAComputeNodeFactory"
            category-path="/analytics/mining/pca"
            factory-class="org.knime.base.node.mine.pca.PCAApplyNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.mine.pca.PCAApplyNodeFactory"
            category-path="/analytics/mining/pca"
            factory-class="org.knime.base.node.mine.pca.PCAReverseNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
            category-path="/manipulation/column/column-convert+replace"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.double2int.DoubleToIntNodeFactory">
      </node>
      <node
            category-path="/manipulation/column"
            factory-class="org.knime.base.node.preproc.filter.hilite.collector.InteractiveHiLiteCollectorNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.LoopEnd2NodeFactory"
            >
      </node>
      <node
            category-path="/analytics/mining/subgroup"
            factory-class="org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
            >
      </node>
      <node
            category-path="/view/view-util"
            factory-class="org.knime.base.node.image.ImageToTableNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.image.ImageToTableNodeFactory"
            category-path="/view/view-util"
            factory-class="org.knime.base.node.image.tablerowtoimage.TableRowToImageNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.manualif.ManualIfNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.manualif.ManualIfNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.endif.EndifNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.endif.EndifNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.startcase.StartcaseNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.startcase.StartcaseNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.endcase.EndcaseNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.endcase.EndcaseNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.caseswitch.model.CaseStartModelNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.caseswitch.model.CaseStartModelNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.endmodelcase.EndmodelcaseNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.endmodelcase.EndmodelcaseNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.caseswitch.variable.CaseStartVariableNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.caseswitch.variable.CaseStartVariableNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.caseswitch.variable.CaseEndVariableNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.switches.caseswitch.variable.CaseEndVariableNodeFactory"
            category-path="/flowcontrol/switches"
            factory-class="org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
            >
      </node>
            <node
            after="org.knime.base.node.preproc.split2.SplitNodeFactory2"
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.columntogrid2.ColumnToGrid2NodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-other"
            factory-class="org.knime.base.node.preproc.columnheaderextract.ColumnHeaderExtractorNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-other"
            factory-class="org.knime.base.node.preproc.columnheaderinsert.ColumnHeaderInsertNodeFactory"
            
            after="org.knime.base.node.preproc.columnheaderextract.ColumnHeaderExtractorNodeFactory">
      </node>
      <node
            category-path="/manipulation/row/row-other"
            factory-class="org.knime.base.node.preproc.addemptyrows.AddEmptyRowsNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/binning"
            factory-class="org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/binning"
            factory-class="org.knime.base.node.preproc.autobinner.apply.AutoBinnerApplyNodeFactory"
            >
      </node>        
      <node
            category-path="/flowcontrol/loopsupport"
            deprecated="false"
            factory-class="org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
            >
      </node>
      <node
            category-path="/io/read"
            factory-class="org.knime.base.node.io.listfiles2.ListFilesNodeFactory"
            >
      </node>
      <node
            category-path="/io/io-other"
            factory-class="org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
            factory-class="org.knime.base.node.util.sampledata.SampleDataNodeFactory"
            category-path="/io/io-other"
            />
      <node
            after="org.knime.base.node.util.sampledata.SampleDataNodeFactory"
            category-path="/io/io-other"
            factory-class="org.knime.base.node.preproc.createtablestructure.CreateTableStructureNodeFactory"
            />
      <node
            after="org.knime.base.node.preproc.createtablestructure.CreateTableStructureNodeFactory"
            category-path="/io/io-other"
            factory-class="org.knime.base.node.util.createtempdir.CreateTempDirectoryNodeFactory"
            />
      <node
            after="org.knime.base.node.util.createtempdir.CreateTempDirectoryNodeFactory"
            category-path="/io/io-other"
            factory-class="org.knime.base.node.util.sendmail.SendMailNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.util.sendmail.SendMailNodeFactory"
            category-path="/io/io-other"
            factory-class="org.knime.base.node.io.extractsysprop.ReadSysPropertyNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.io.extractsysprop.ReadSysPropertyNodeFactory"
            category-path="/io/io-other"
            factory-class="org.knime.base.node.io.extractcontextprop.ReadContextPropertyNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            factory-class="org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLDeNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.normalize.NormalizerDeNodeFactory"
            >
      </node>
      <node
            category-path="/view/property"
            factory-class="org.knime.base.node.viz.property.color.extract.ColorExtractNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            deprecated="true"
            factory-class="org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colconvert.categorytonumber.CategoryToNumberApplyNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-filter"
            factory-class="org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
            >
      </node> 
      <node
            category-path="//manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.rounddouble.RoundDoubleNodeFactory"
            >
      </node>      
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            deprecated="false"
            after="org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory"
            factory-class="org.knime.base.node.preproc.refcolumnresorter.ReferenceColumnResorterNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.columnlag.LagColumnNodeFactory"
            
            after="org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/"
            factory-class="org.knime.base.node.preproc.datavalidator.DataValidatorNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/"
            factory-class="org.knime.base.node.preproc.datavalidator.DataValidatorSpecNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.group.GroupLoopStartNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.variableloopend.VariableLoopEndNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.columnaggregator.ColumnAggregatorNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.bytevector.create.CreateByteVectorNodeFactory"
            
            after="org.knime.base.collection.list.split.CollectionSplitNodeFactory"/>
      <node
            category-path="/manipulation/column/column-split+combine"
            factory-class="org.knime.base.node.preproc.bytevector.expand.ExpandByteVectorNodeFactory"
            
            after="org.knime.base.node.preproc.bytevector.create.CreateByteVectorNodeFactory"/>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.generictry.DataPortTryNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.generictry.VariablePortTryNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.genericcatch.VariablePortCatchNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.genericcatch.DBPortCatchNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.genericcatch.GenericPortCatchNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowcontrol.trycatch.generictry.VariablePortTryNodeFactory"
            category-path="/flowcontrol/trycatch"
            factory-class="org.knime.base.node.flowcontrol.trycatch.inverter.ActiveBranchInverterNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowvariable.extractvariables.ExtractVariablesDBNodeFactory"
            category-path="/flowcontrol/variables"
            factory-class="org.knime.base.node.flowvariable.tablecoltovariable.TableColumnToVariableNodeFactory"
            >
      </node>      
      <node
            category-path="/flowcontrol/automation"
            factory-class="org.knime.base.node.flowcontrol.sleep.SleepNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.flowcontrol.sleep.SleepNodeFactory"
            category-path="/flowcontrol/automation"
            factory-class="org.knime.base.node.workflow.save.SaveWorkflowNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.workflow.save.SaveWorkflowNodeFactory"
            category-path="/flowcontrol/automation"
            factory-class="org.knime.base.node.util.timerinfo.TimerinfoNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.util.timerinfo.TimerinfoNodeFactory"
            category-path="/flowcontrol/automation"
            factory-class="org.knime.base.node.util.globaltimerinfo.GlobalTimerinfoNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.recursive2.RecursiveLoopStartNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.recursive2.RecursiveLoopEndNodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.recursive2.RecursiveLoopStart2NodeFactory"
            >
      </node>
      <node
            category-path="/flowcontrol/loopsupport"
            factory-class="org.knime.base.node.meta.looper.recursive2.RecursiveLoopEnd2NodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            factory-class="org.knime.base.node.preproc.pmml.xml2pmml.XML2PMMLNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-connector"
            factory-class="org.knime.base.node.io.database.connection.JDBCConnectorNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-io"
            factory-class="org.knime.base.node.io.database.connection.DBTableSelectorNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-utility"
            factory-class="org.knime.base.node.io.database.SQLInjectNodeFactory"
            >
      </node>
      <node
            category-path="database/database-utility"
            factory-class="org.knime.base.node.io.database.SQLExtractNodeFactory"
            >
      </node>
      <node
            category-path="database/database-utility"
            factory-class="org.knime.base.node.io.database.drop.DBDropTableNodeFactory"
            >
      </node>
      <node
            category-path="/view"
            factory-class="org.knime.base.node.viz.hilite.AutoHiLiteNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colautotypecast.ColumnAutoTypeCasterNodeFactory"
            >
      </node>
           <node
            category-path="/io/read"
            factory-class="org.knime.base.node.io.fixedwidthfr.FixedWidthFRNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.targetshuffling.TargetShufflingNodeFactory"
            />
      <node deprecated="true"
            category-path="/analytics/mining/miscClass"
            factory-class="org.knime.base.node.mine.knn.pmml.PMMLKNNNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.pmml.missingval.apply.MissingValueApplyNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-transform"
            factory-class="org.knime.base.node.preproc.extractmissingvaluecause.ExtractMissingValueCauseNodeFactory">
      </node>
      <node
            category-path="/manipulation/column/column-convert+replace"
            factory-class="org.knime.base.node.preproc.colconvert.numbertocategory.NumberToCategoryApplyNodeFactory"
            >
      </node>
      <node 
      		category-path="/database/database-manipulation" 
      		factory-class="org.knime.base.node.io.database.columnrename.DBColumnRenameNodeFactory" 
      		/>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.numbertostring.NumberToStringNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.stringtonumber.StringToNumberNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.binner.BinnerNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.columntrans2.One2ManyCol2PMMLNodeFactory2"
            >
      </node>
      <node
            category-path="/manipulation/pmml"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.pmml.columntrans2.Many2OneCol2PMMLNodeFactory2"
            >
      </node>
      <node
            category-path="/analytics/mining/dtree"
            deprecated="false"
            factory-class="org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
            >
      </node>
      <node
            category-path="/analytics/mining/regression"
            deprecated="false"
            factory-class="org.knime.base.node.mine.regression.linear2.learner.LinReg2LearnerNodeFactory2"
            >
      </node>
      <node
            after="org.knime.base.node.mine.regression.linear2.learner.LinReg2LearnerNodeFactory2"
            category-path="/analytics/mining/regression"
            deprecated="false"
            factory-class="org.knime.base.node.mine.regression.polynomial.learner2.PolyRegLearnerNodeFactory2"
            >
      </node>
      <node
            category-path="/analytics/mining/regression"
            deprecated="true"
            factory-class="org.knime.base.node.mine.regression.logistic.learner.LogRegLearnerNodeFactory2"
            >
      </node>
      <node
            category-path="/analytics/mining/regression"
            deprecated="true"
            factory-class="org.knime.base.node.mine.regression.logistic.learner3.LogRegLearnerNodeFactory3"
            >
      </node>
      <node
            category-path="/analytics/mining/nn/mlp"
            deprecated="false"
            factory-class="org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
            >
      </node>
      <node
            category-path="/analytics/mining/svm"
            deprecated="false"
            factory-class="org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
            >
      </node>
      <node
            category-path="/analytics/mining/bayes"
            deprecated="false"
            factory-class="org.knime.base.node.mine.bayes.naivebayes.learner2.NaiveBayesLearnerNodeFactory3"
            >
      </node>
      <node
            category-path="/analytics/mining/clustering"
            deprecated="false"
            factory-class="org.knime.base.node.mine.cluster.kmeans.ClusterNodeFactory2"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.pivot.DBPivotNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            deprecated="false"
            factory-class="org.knime.base.node.io.database.sampling.DBSamplingNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            factory-class="org.knime.base.node.io.database.binning.auto.DBAutoBinnerNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            deprecated="false"
            factory-class="org.knime.base.node.io.database.binning.numeric.DBNumericBinnerNodeFactory"
            >
      </node>
      <node
            category-path="/database/database-manipulation"
            deprecated="false"
            factory-class="org.knime.base.node.io.database.binning.apply.DBApplyBinnerNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-filter"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.filter.rowref.RowSplitRefNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-filter"
            factory-class="org.knime.base.node.preproc.filter.columnref.ColumnSplitRefNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-transform"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.rank.RankNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-filter"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.filter.rowref.RowSplitRefNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/column/column-filter"
            factory-class="org.knime.base.node.preproc.filter.columnref.ColumnSplitRefNodeFactory"
            >
      </node>
      <node
            category-path="/manipulation/row/row-transform"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.rank.RankNodeFactory"
            >
      </node>
      <node
            after="org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
            category-path="/manipulation/column/column-convert+replace"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.double2int2.DoubleToIntNodeFactory">
      </node>
      <node
            after="org.knime.base.node.io.table.read.ReadTableNodeFactory"
            category-path="/io/read"
            deprecated="false"
            factory-class="org.knime.base.node.io.pmml.read.PMMLReaderNodeFactory2">
      </node>
      <node
            category-path="/manipulation/row/row-filter"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.filter.definition.merger.FilterDefinitionMergerNodeFactory">
      </node>
      <node
            category-path="/manipulation/row/row-filter"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.filter.definition.apply.FilterApplyNodeFactory">
      </node>
      <node
            category-path="/manipulation/row/row-filter"
            deprecated="false"
            factory-class="org.knime.base.node.preproc.filter.definition.apply.rowsplitter.FilterApplyRowSplitterNodeFactory">
      </node>
      <node
            after="org.knime.base.node.mine.regression.polynomial.learner2.PolyRegLearnerNodeFactory2"
            category-path="/analytics/mining/regression"
            deprecated="false"
            factory-class="org.knime.base.node.mine.regression.predict3.RegressionPredictorNodeFactory2">
      </node>
      <node
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopStartNodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopStartNodeFactory2"
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopEndNodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopEndNodeFactory"
            category-path="/analytics/mining/featureselection"
            factory-class="org.knime.base.node.meta.feature.selection.FeatureSelectionFilterNodeFactory">
      </node>
      <node
            after="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopStartNodeFactory"
            category-path="/analytics/mining/featureselection"
            deprecated="false"
            factory-class="org.knime.base.node.meta.feature.selection.FeatureSelectionLoopStartNodeFactory2">
      </node>
   </extension>
   
      
   <extension point="org.knime.workbench.repository.metanode">
       <PersistedMetaNode
             category-path="/analytics/mining/modeleval/meta"
             description="Provides a skeleton of nodes necessary for cross validation"
             icon="icons/meta_nodes/cross_validation_flow.png"
             id="cross_validation"
             name="Cross Validation"
             workflowDir="metanode_templates/Cross Validation/">
       </PersistedMetaNode>
       <PersistedMetaNode
             category-path="/flowcontrol/meta"
             icon="icons/meta_nodes/variables_looper_flow.png"
             id="variables_loop"
             name="Variables Loop (Data)"
             workflowDir="metanode_templates/Variables Loop (Data)/">
       </PersistedMetaNode>
       <PersistedMetaNode
             category-path="/flowcontrol/meta"
             icon="icons/meta_nodes/variables_looper_db_flow.png"
             id="variables_loop_db"
             name="Variables Loop (Database)"
             after="variables_loop"
             workflowDir="metanode_templates/Variables Loop (Database)/">
       </PersistedMetaNode>
       <PersistedMetaNode
             category-path="/flowcontrol/meta"
             description="Iteratively executes the contained flow on a list of files. The list of files needs to be defined by the input table, whereby each row represents one individual file location."
             icon="icons/meta_nodes/looping_file_reader_flow.png"
             id="iterate_list_of_files"
             name="Iterate List of Files"
             after="variables_loop_db"
             workflowDir="metanode_templates/Iterate list of files/">
       </PersistedMetaNode>
       <PersistedMetaNode 
            category-path="/flowcontrol/meta" 
            description="Executes the contained workflow multiple times. Aggregation method and termination criteration must be set using the loop start and end node contained in the workflow." 
            icon="icons/meta_nodes/loop_x_times_flow.png" 
            id="looper" 
            name="Loop x-times" 
             after="iterate_list_of_files"
            workflowDir="metanode_templates/Looper/">
       </PersistedMetaNode>
       <PersistedMetaNode
            category-path="/analytics/mining/featureselection/meta"
            description="Backward Feature Elimination"
            expert-flag="false"
            icon="icons/meta_nodes/feature_elimination_flow.png"
            id="backward_feature_elimination"
            name="Backward Feature Elimination"
            workflowDir="metanode_templates/Backward Feature Elimination/">
      </PersistedMetaNode>
      <PersistedMetaNode
            category-path="/analytics/mining/featureselection/meta"
            description="Forward Feature Selection"
            expert-flag="false"
            icon="icons/meta_nodes/feature_elimination_flow.png"
            id="forward_feature_selection"
            name="Forward Feature Selection"
            workflowDir="metanode_templates/Forward Feature Selection/">
      </PersistedMetaNode>
    </extension>
     <extension
           point="org.knime.workbench.repository.registeredFileExtensions">
        <FileExtensionMapping
              NodeFactory="org.knime.base.node.io.filereader.FileReaderNodeFactory">
           <FileExtension
                 extension=".csv">
           </FileExtension>
           <FileExtension
                 extension=".csv.gz">
           </FileExtension>
           <FileExtension
                 extension=".txt">
           </FileExtension>
           <FileExtension
                 extension=".tsv">
           </FileExtension>
           <FileExtension
                 extension=".all">
           </FileExtension>
           <FileExtension
                 extension=".txt.gz">
           </FileExtension>
        </FileExtensionMapping>
        <FileExtensionMapping
              NodeFactory="org.knime.base.node.io.table.read.ReadTableNodeFactory">
           <FileExtension
                 extension=".table">
           </FileExtension>
        </FileExtensionMapping>
        <FileExtensionMapping
              NodeFactory="org.knime.base.node.io.pmml.read.PMMLReaderNodeFactory2">
           <FileExtension
                 extension=".pmml">
           </FileExtension>
        </FileExtensionMapping>
     </extension>
     <extension
           point="org.knime.base.MissingCellHandler">
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.DoubleMeanMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.DoubleMovingAverageMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.FixedDoubleValueMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.MaxMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.IntegerMeanMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.FixedIntegerValueMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.MinMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.MostFrequentValueMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.timeseries.NextMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.RemoveRowMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.MedianNumberMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.timeseries.PreviousMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.timeseries.LinearInterpolationMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.FixedStringValueMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.timeseries.AverageInterpolationMissingCellHandlerFactory">
        </MissingCellHandler>
        <MissingCellHandler
              MissingCellHandlerFactory="org.knime.base.node.preproc.pmml.missingval.handlers.FixedLongValueMissingCellHandlerFactory">
        </MissingCellHandler>
     </extension>
     <extension
           point="org.knime.core.DataType">
        <DataType
              cellClass="org.knime.base.data.bitvector.BitVectorCell">
           <serializer
                 cellClass="org.knime.base.data.bitvector.BitVectorCell"
                 serializerClass="org.knime.base.data.bitvector.BitVectorCell$Serializer">
           </serializer>
        </DataType>
     </extension>
     <extension
           point="org.knime.core.PortType">
        <portType
              color="#1eb9dc"
              hidden="true"
              name="PMML Discretization"
              objectClass="org.knime.base.node.preproc.autobinner.pmml.PMMLDiscretizePreprocPortObject"
              objectSerializer="org.knime.base.node.preproc.autobinner.pmml.PMMLDiscretizePreprocPortObject$Serializer"
              specClass="org.knime.base.node.preproc.autobinner.pmml.PMMLDiscretizePreprocPortObjectSpec"
              specSerializer="org.knime.base.node.preproc.autobinner.pmml.PMMLDiscretizePreprocPortObjectSpec$Serializer">
        </portType>
        <portType
              color="#1eb9dc"
              hidden="true"
              name="Fuzzy Basis Function"
              objectClass="org.knime.base.node.mine.bfn.fuzzy.FuzzyBasisFunctionPortObject"
              objectSerializer="org.knime.base.node.mine.bfn.fuzzy.FuzzyBasisFunctionPortObject$Serializer"
              specClass="org.knime.core.data.DataTableSpec">
        </portType>
        <portType
              hidden="true"
              name="Feature Elimination"
              objectClass="org.knime.base.node.meta.feature.backwardelim.BWElimModel"
              objectSerializer="org.knime.base.node.meta.feature.backwardelim.BWElimModel$ModelSerializer"
              specClass="org.knime.base.node.meta.feature.backwardelim.BWElimModel"
              specSerializer="org.knime.base.node.meta.feature.backwardelim.BWElimModel$SpecSerializer">
        </portType>
        <portType
              color="#1eb9dc"
              hidden="true"
              name="Sota"
              objectClass="org.knime.base.node.mine.sota.SotaPortObject"
              objectSerializer="org.knime.base.node.mine.sota.SotaPortObject$Serializer"
              specClass="org.knime.base.node.mine.sota.SotaPortObjectSpec"
              specSerializer="org.knime.base.node.mine.sota.SotaPortObjectSpec$Serializer">
        </portType>
        <portType
              color="#1eb9dc"
              hidden="true"
              name="PCA"
              objectClass="org.knime.base.node.mine.pca.PCAModelPortObject"
              objectSerializer="org.knime.base.node.mine.pca.PCAModelPortObject$Serializer"
              specClass="org.knime.base.node.mine.pca.PCAModelPortObjectSpec"
              specSerializer="org.knime.base.node.mine.pca.PCAModelPortObjectSpec$Serializer">
        </portType>
        <portType
              color="#1eb9dc"
              hidden="true"
              name="Normalizer"
              objectClass="org.knime.base.data.normalize.NormalizerPortObject"
              objectSerializer="org.knime.base.data.normalize.NormalizerPortObject$Serializer"
              specClass="org.knime.core.data.DataTableSpec">
        </portType>
        <portType
              color="#1eb9dc"
              hidden="true"
              name="Naive Bayes"
              objectClass="org.knime.base.node.mine.bayes.naivebayes.port.NaiveBayesPortObject"
              objectSerializer="org.knime.base.node.mine.bayes.naivebayes.port.NaiveBayesPortObject$Serializer"
              specClass="org.knime.base.node.mine.bayes.naivebayes.port.NaiveBayesPortObjectSpec"
              specSerializer="org.knime.base.node.mine.bayes.naivebayes.port.NaiveBayesPortObjectSpec$Serializer">
        </portType>
        <portType
              hidden="true"
              name="CAIM"
              objectClass="org.knime.base.node.preproc.discretization.caim2.DiscretizationModel"
              objectSerializer="org.knime.base.node.preproc.discretization.caim2.DiscretizationModel$Serializer"
              specClass="org.knime.core.data.DataTableSpec">
        </portType>
        <portType
              hidden="true"
              color="#1eb9dc"
              name="Radial Basis Function"
              objectClass="org.knime.base.node.mine.bfn.radial.RadialBasisFunctionPortObject"
              objectSerializer="org.knime.base.node.mine.bfn.radial.RadialBasisFunctionPortObject$Serializer"
              specClass="org.knime.core.data.DataTableSpec">
        </portType>
        <portType
              hidden="true"
              name="Correlation"
              objectClass="org.knime.base.node.preproc.correlation.pmcc.PMCCPortObjectAndSpec"
              objectSerializer="org.knime.base.node.preproc.correlation.pmcc.PMCCPortObjectAndSpec$ModelSerializer"
              specClass="org.knime.base.node.preproc.correlation.pmcc.PMCCPortObjectAndSpec"
              specSerializer="org.knime.base.node.preproc.correlation.pmcc.PMCCPortObjectAndSpec$SpecSerializer">
        </portType>
        <portType
            hidden="true"
            name="Feature Selection Model"
            objectClass="org.knime.base.node.meta.feature.selection.FeatureSelectionModel"
            objectSerializer="org.knime.base.node.meta.feature.selection.FeatureSelectionModel$ModelSerializer"
            specClass="org.knime.base.node.meta.feature.selection.FeatureSelectionModel"
            specSerializer="org.knime.base.node.meta.feature.selection.FeatureSelectionModel$NewSpecSerializer">
      </portType>
     </extension>   
</plugin>
