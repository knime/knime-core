<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <groupId>org.knime</groupId>
    <artifactId>org.knime.core.tests-fetch-jars</artifactId>
    <version>${revision}${changelist}</version>
    <packaging>pom</packaging>

    <name>Jar fetcher for org.knime.core.tests</name>
    <description>
       Running the maven goal &quot;package&quot; on this maven project will fetch all jars required for
       org.knime.base.views.tests and put them into the lib/ directory.
    </description>

    <properties>
        <revision>5.2.0</revision>
        <changelist>-SNAPSHOT</changelist>
    </properties>

    <!-- NOTE ABOUT DEALING WITH DEPENDENCIES:

    For *large* dependencies that are *already* part of KNIME we should avoid duplicating
    them (for small dependencies it is usually not worth the hassle).

    *Large* in this context means: They contain a lot of classes (e.g. scala-library) or
    they have a lot of transitive dependencies (e.g. hadoop), or both.

    How to avoid duplication?

    Option (1)
      Exclude them via build>plugins>plugin(maven-dependency-plugin)>executions>configuration (see at the bottom
      of this file).
      Pro: This leaves the maven dependency tree intact (for browsing), but prevents them from being copied to the
           libs/ directory.
      Contra: A lot of work when dependencies have themselves have a lot of transitive dependencies, because you need
              to exclude them manually too, then.

    Option (2):
      Exclude them via dependencies>dependency>exclusions.
      Pro: Works well for dependencies that themselves have a lot of transitive dependencies.
      Contra: Alters the maven dependency tree, which may be confusing.
    -->
    <dependencies>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>3.15.2</version>
        </dependency>
        <dependency>
            <groupId>com.networknt</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>1.0.87</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-sources</id>
                        <configuration>
                            <classifier>sources</classifier>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>../</outputDirectory>
                            <excludeArtifactIds>slf4j-api,jackson-core,jackson-annotations,jackson-databind,jackson-dataformat-yaml</excludeArtifactIds>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>../</outputDirectory>
                            <excludeArtifactIds>slf4j-api,jackson-core,jackson-annotations,jackson-databind,jackson-dataformat-yaml</excludeArtifactIds>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
        